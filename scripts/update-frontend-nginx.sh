#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ Nginx
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./update-frontend-nginx.sh [DOMAIN]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[–û–®–ò–ë–ö–ê]${NC} $1" >&2
}

success() {
    echo -e "${GREEN}[–£–°–ü–ï–•]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -eq 0 ]; then
    error "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–æ–º–µ–Ω!"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <domain>"
    echo "–ü—Ä–∏–º–µ—Ä: $0 example.com"
    exit 1
fi

DOMAIN=$1
log "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –¥–ª—è –¥–æ–º–µ–Ω–∞: $DOMAIN"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ root –ø—Ä–∞–≤
if [ "$EUID" -ne 0 ]; then
    error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root (sudo)"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ
if ! docker-compose ps | grep -q "Up"; then
    error "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: systemctl start ai-quiz"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —Å–±–æ—Ä–∫–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
log "üî® –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–±–æ—Ä–∫–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
docker create --name temp-frontend-build \
    -v "$(pwd)/frontend:/app/frontend" \
    node:18 \
    bash -c "cd /app/frontend && rm -rf node_modules dist .npm .cache .vite .parcel-cache && npm cache clean --force && npm install --no-cache --prefer-offline=false && npm run build"

# –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏
log "üì¶ –°–æ–±–∏—Ä–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥..."
docker start temp-frontend-build
docker wait temp-frontend-build

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —Å–±–æ—Ä–∫–∏
if [ "$(docker inspect temp-frontend-build --format='{{.State.ExitCode}}')" != "0" ]; then
    error "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
    docker logs temp-frontend-build
    docker rm temp-frontend-build
    exit 1
fi

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
log "üìã –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
docker cp temp-frontend-build:/app/frontend/dist/. /var/www/html/

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
docker rm temp-frontend-build

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
log "üîê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞..."
chown -R www-data:www-data /var/www/html
chmod -R 755 /var/www/html

# –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Nginx
log "üßπ –û—á–∏—â–∞–µ–º –∫—ç—à Nginx..."
rm -rf /var/cache/nginx/* 2>/dev/null || true

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx
log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Nginx..."
systemctl reload nginx

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
sleep 3

if curl -s -o /dev/null -w "%{http_code}" "https://$DOMAIN" | grep -q "200"; then
    success "–§—Ä–æ–Ω—Ç–µ–Ω–¥ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω!"
else
    warning "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä—É—á–Ω—É—é"
fi

success "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
log "üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ –∞–¥—Ä–µ—Å—É: https://$DOMAIN"
log "üí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–≤–∫–ª—é—á–∞—è –±—ç–∫–µ–Ω–¥) –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./scripts/deploy-with-nginx.sh $DOMAIN" 