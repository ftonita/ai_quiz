#!/usr/bin/env python3
import os
import sys
import subprocess
import time
from pathlib import Path

def check_docker():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ Docker"""
    print("üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker...")
    try:
        result = subprocess.run(["docker", "--version"], capture_output=True, text=True)
        print(f"‚úÖ Docker: {result.stdout.strip()}")
        return True
    except Exception as e:
        print("‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def check_docker_compose():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ docker-compose"""
    print("üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose...")
    try:
        result = subprocess.run(["docker-compose", "--version"], capture_output=True, text=True)
        print(f"‚úÖ Docker Compose: {result.stdout.strip()}")
        return True
    except Exception as e:
        print("‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def build_and_run():
    """–°–æ–±–∏—Ä–∞–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Docker"""
    print("\nüî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    try:
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...")
        subprocess.run(["docker-compose", "down"], check=False)
        
        # –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
        print("üöÄ –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫...")
        subprocess.run(["docker-compose", "up", "--build", "-d"], check=True)
        
        print("\nüéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!")
        print("üì± –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000")
        print("üîß API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs")
        print("\nüìä –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:")
        print("   docker-compose logs -f")
        print("\n‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:")
        print("   docker-compose down")
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏/–∑–∞–ø—É—Å–∫–∞: {e}")
        return False
    
    return True

def show_logs():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"""
    print("\nüìä –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:")
    try:
        subprocess.run(["docker-compose", "logs", "-f"])
    except KeyboardInterrupt:
        print("\n‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω")

def main():
    print("üéØ AI Quiz Platform - Production")
    print("=" * 50)
    
    if not check_docker():
        print("\n‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker")
        sys.exit(1)
    
    if not check_docker_compose():
        print("\n‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose")
        sys.exit(1)
    
    if build_and_run():
        print("\n" + "=" * 50)
        print("üéØ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print("=" * 50)

if __name__ == "__main__":
    main() 