#!/usr/bin/env python3
import os
import sys
import subprocess
import platform
import time
from pathlib import Path

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ Python –∏ Node.js"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    try:
        result = subprocess.run([sys.executable, "--version"], capture_output=True, text=True)
        print(f"‚úÖ Python: {result.stdout.strip()}")
    except Exception as e:
        print("‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
    try:
        result = subprocess.run(["node", "--version"], capture_output=True, text=True)
        print(f"‚úÖ Node.js: {result.stdout.strip()}")
    except Exception as e:
        print("‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    return True

def install_backend():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ backend"""
    print("\nüêç –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π backend...")
    backend_dir = Path("backend")
    if not backend_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    try:
        subprocess.run([sys.executable, "-m", "pip", "install", "--upgrade", "pip"], 
                      cwd=backend_dir, check=True)
        subprocess.run([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"], 
                      cwd=backend_dir, check=True)
        print("‚úÖ Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ backend: {e}")
        return False

def install_frontend():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ frontend"""
    print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend...")
    frontend_dir = Path("frontend")
    if not frontend_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ package.json
        package_json = frontend_dir / "package.json"
        if not package_json.exists():
            print("‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (—ç—Ç–æ —Å–æ–∑–¥–∞—Å—Ç package-lock.json)
        subprocess.run(["npm", "install"], cwd=frontend_dir, check=True)
        print("‚úÖ Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ package-lock.json —Å–æ–∑–¥–∞–ª—Å—è
        lock_file = frontend_dir / "package-lock.json"
        if lock_file.exists():
            print("‚úÖ package-lock.json —Å–æ–∑–¥–∞–Ω")
        else:
            print("‚ö†Ô∏è  package-lock.json –Ω–µ —Å–æ–∑–¥–∞–Ω")
        
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ frontend: {e}")
        return False

def start_services():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç backend –∏ frontend –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ"""
    print("\nüöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...")
    
    backend_cmd = [sys.executable, "-m", "uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]
    frontend_cmd = ["npm", "run", "dev"]
    
    processes = []
    
    try:
        # –ó–∞–ø—É—Å–∫ backend
        print("üîß –ó–∞–ø—É—Å–∫ backend (http://localhost:8000)...")
        backend_proc = subprocess.Popen(backend_cmd, cwd="backend")
        processes.append(backend_proc)
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ backend
        time.sleep(3)
        
        # –ó–∞–ø—É—Å–∫ frontend
        print("üé® –ó–∞–ø—É—Å–∫ frontend (http://localhost:5173)...")
        frontend_proc = subprocess.Popen(frontend_cmd, cwd="frontend")
        processes.append(frontend_proc)
        
        print("\nüéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!")
        print("üì± –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:5173")
        print("üîß API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs")
        print("\n‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        for proc in processes:
            proc.wait()
            
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
        for proc in processes:
            proc.terminate()
        print("‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

def main():
    print("üéØ AI Quiz Platform - Dev Environment")
    print("=" * 50)
    
    if not check_dependencies():
        print("\n‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.11+ –∏ Node.js 18+")
        sys.exit(1)
    
    if not install_backend():
        sys.exit(1)
    
    if not install_frontend():
        sys.exit(1)
    
    start_services()

if __name__ == "__main__":
    main() 